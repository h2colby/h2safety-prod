"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/insights/generate";
exports.ids = ["pages/api/insights/generate"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "firebase-admin/app":
/*!*************************************!*\
  !*** external "firebase-admin/app" ***!
  \*************************************/
/***/ ((module) => {

module.exports = import("firebase-admin/app");;

/***/ }),

/***/ "firebase-admin/firestore":
/*!*******************************************!*\
  !*** external "firebase-admin/firestore" ***!
  \*******************************************/
/***/ ((module) => {

module.exports = import("firebase-admin/firestore");;

/***/ }),

/***/ "openai":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("openai");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Finsights%2Fgenerate&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Finsights%2Fgenerate.ts&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Finsights%2Fgenerate&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Finsights%2Fgenerate.ts&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_insights_generate_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/insights/generate.ts */ \"(api)/./pages/api/insights/generate.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_insights_generate_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_insights_generate_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_insights_generate_ts__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_insights_generate_ts__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/insights/generate\",\n        pathname: \"/api/insights/generate\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_insights_generate_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmluc2lnaHRzJTJGZ2VuZXJhdGUmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRmluc2lnaHRzJTJGZ2VuZXJhdGUudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ0U7QUFDMUQ7QUFDNkQ7QUFDN0Q7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLDREQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyw0REFBUTtBQUNwQztBQUNPLHdCQUF3Qix5R0FBbUI7QUFDbEQ7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9pbnNpZ2h0cy9nZW5lcmF0ZS50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCAnZGVmYXVsdCcpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgJ2NvbmZpZycpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvaW5zaWdodHMvZ2VuZXJhdGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9pbnNpZ2h0cy9nZW5lcmF0ZVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJydcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Finsights%2Fgenerate&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Finsights%2Fgenerate.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/insights/generate.ts":
/*!****************************************!*\
  !*** ./pages/api/insights/generate.ts ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase-admin/app */ \"firebase-admin/app\");\n/* harmony import */ var firebase_admin_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase-admin/firestore */ \"firebase-admin/firestore\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! openai */ \"openai\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__, firebase_admin_firestore__WEBPACK_IMPORTED_MODULE_1__, openai__WEBPACK_IMPORTED_MODULE_2__]);\n([firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__, firebase_admin_firestore__WEBPACK_IMPORTED_MODULE_1__, openai__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// pages/api/insights/generate.ts\n\n\n\n// Validate environment variables\nif (!process.env.FIREBASE_SERVICE_ACCOUNT_KEY_BASE64 || !process.env.OPENAI_API_KEY) {\n    throw new Error('Required environment variables are not set.');\n}\nconst base64 = process.env.FIREBASE_SERVICE_ACCOUNT_KEY_BASE64;\nconst serviceAccount = JSON.parse(Buffer.from(base64, 'base64').toString('utf-8'));\n// Initialize Firebase Admin SDK\nif (!(0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__.getApps)().length) {\n    (0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)({\n        credential: (0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__.cert)(serviceAccount)\n    });\n}\nconst adminDb = (0,firebase_admin_firestore__WEBPACK_IMPORTED_MODULE_1__.getFirestore)();\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_2__.OpenAI({\n    apiKey: process.env.OPENAI_API_KEY\n});\n// Insight Prompt Templates\nconst insightTypePrompts = {\n    \"Code References\": `\nAnalyze the conversation below and provide a detailed list of applicable codes, standards, or regulations.  \nInclude their relevance to the context and suggest additional applicable standards if any. Use bullet points for clarity.`,\n    \"Recommended Actions\": `\nBased on the conversation, provide a list of actionable recommendations.  \nFor each, include priority (High/Medium/Low) and a brief explanation. Use the format:  \n- **Action Item**: Title  \n  - **Priority**: High/Medium/Low  \n  - **Details**: Explanation and reasoning.`,\n    \"General Insights\": `\nSummarize the conversation focusing on:  \n1. Key themes and recurring topics.  \n2. Critical challenges or risks.  \n3. Technical takeaways.  \n4. Outstanding questions or gaps for follow-up.  \nOrganize insights under clear headers.`\n};\nasync function handler(req, res) {\n    res.setHeader('Content-Type', 'application/json');\n    const { threadId, insightType } = req.body;\n    if (!threadId || typeof threadId !== 'string') {\n        return res.status(400).json({\n            error: 'Invalid or missing threadId.'\n        });\n    }\n    if (!insightType || typeof insightType !== 'string' || !insightTypePrompts[insightType]) {\n        return res.status(400).json({\n            error: 'Invalid or missing insightType.'\n        });\n    }\n    try {\n        // Fetch thread details\n        const threadRef = adminDb.doc(`threads/${threadId}`);\n        const threadSnap = await threadRef.get();\n        if (!threadSnap.exists) {\n            return res.status(404).json({\n                error: 'Thread not found.'\n            });\n        }\n        const threadData = threadSnap.data();\n        const messages = threadData?.messages || [];\n        // Format messages for OpenAI\n        const conversationText = messages.map((m)=>`${m.sender === 'ai' ? 'AI' : 'User'}: ${m.content}`).join('\\n\\n');\n        // Create OpenAI prompt\n        const prompt = `\nYou are an expert in hydrogen safety and compliance.  \nAnalyze the following conversation and generate insights based on the request type.\n\n---\n\n**Conversation History**:\n${conversationText}\n\n---\n\n**Insight Request**:  \n${insightTypePrompts[insightType]}\n\nRespond concisely and clearly in the requested format.\n`;\n        let insightContent;\n        try {\n            const response = await openai.chat.completions.create({\n                model: 'gpt-4o-mini',\n                messages: [\n                    {\n                        role: 'system',\n                        content: 'You are an expert assistant in hydrogen safety and compliance insights.'\n                    },\n                    {\n                        role: 'user',\n                        content: prompt\n                    }\n                ],\n                temperature: 0.5,\n                max_tokens: 3000\n            });\n            insightContent = response.choices[0]?.message?.content || 'No insights generated.';\n        } catch (openAiError) {\n            console.error('OpenAI API Error:', openAiError);\n            return res.status(500).json({\n                error: 'Failed to generate insights from OpenAI.'\n            });\n        }\n        // Save insights to Firestore\n        const insightRef = adminDb.collection('insights').doc();\n        await insightRef.set({\n            threadId,\n            title: insightType,\n            content: insightContent,\n            createdAt: new Date()\n        });\n        // Return insights\n        return res.status(200).json({\n            message: 'Insights generated successfully.',\n            content: insightContent\n        });\n    } catch (error) {\n        console.error('Insights Generation Error:', error);\n        return res.status(500).json({\n            error: 'An error occurred while generating insights.'\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/insights/generate.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Finsights%2Fgenerate&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Finsights%2Fgenerate.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();