"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/reports/generate";
exports.ids = ["pages/api/reports/generate"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "firebase-admin/app":
/*!*************************************!*\
  !*** external "firebase-admin/app" ***!
  \*************************************/
/***/ ((module) => {

module.exports = import("firebase-admin/app");;

/***/ }),

/***/ "firebase-admin/firestore":
/*!*******************************************!*\
  !*** external "firebase-admin/firestore" ***!
  \*******************************************/
/***/ ((module) => {

module.exports = import("firebase-admin/firestore");;

/***/ }),

/***/ "openai":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("openai");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Freports%2Fgenerate&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Freports%2Fgenerate.ts&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Freports%2Fgenerate&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Freports%2Fgenerate.ts&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_reports_generate_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/reports/generate.ts */ \"(api)/./pages/api/reports/generate.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_reports_generate_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_reports_generate_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_reports_generate_ts__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_reports_generate_ts__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/reports/generate\",\n        pathname: \"/api/reports/generate\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_reports_generate_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnJlcG9ydHMlMkZnZW5lcmF0ZSZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGcmVwb3J0cyUyRmdlbmVyYXRlLnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNFO0FBQzFEO0FBQzREO0FBQzVEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQywyREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsMkRBQVE7QUFDcEM7QUFDTyx3QkFBd0IseUdBQW1CO0FBQ2xEO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9hcGkvcmVwb3J0cy9nZW5lcmF0ZS50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCAnZGVmYXVsdCcpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgJ2NvbmZpZycpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvcmVwb3J0cy9nZW5lcmF0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3JlcG9ydHMvZ2VuZXJhdGVcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiAnJyxcbiAgICAgICAgZmlsZW5hbWU6ICcnXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Freports%2Fgenerate&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Freports%2Fgenerate.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/reports/generate.ts":
/*!***************************************!*\
  !*** ./pages/api/reports/generate.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase-admin/app */ \"firebase-admin/app\");\n/* harmony import */ var firebase_admin_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase-admin/firestore */ \"firebase-admin/firestore\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! openai */ \"openai\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__, firebase_admin_firestore__WEBPACK_IMPORTED_MODULE_1__, openai__WEBPACK_IMPORTED_MODULE_2__]);\n([firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__, firebase_admin_firestore__WEBPACK_IMPORTED_MODULE_1__, openai__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// pages/api/reports/generate.ts\n\n\n\n// Validate required environment variables\nif (!process.env.FIREBASE_SERVICE_ACCOUNT_KEY_BASE64 || !process.env.OPENAI_API_KEY) {\n    throw new Error('Required environment variables are not set.');\n}\n// Decode and initialize Firebase Admin SDK\nconst base64 = process.env.FIREBASE_SERVICE_ACCOUNT_KEY_BASE64;\nconst serviceAccount = JSON.parse(Buffer.from(base64, 'base64').toString('utf-8'));\nif (!(0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__.getApps)().length) {\n    (0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)({\n        credential: (0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__.cert)(serviceAccount)\n    });\n}\nconst adminDb = (0,firebase_admin_firestore__WEBPACK_IMPORTED_MODULE_1__.getFirestore)();\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_2__.OpenAI({\n    apiKey: process.env.OPENAI_API_KEY\n});\nasync function handler(req, res) {\n    const { projectId, threadId, reportType, customPrompt } = req.body;\n    // Validate required fields\n    if (typeof projectId !== 'string' || typeof threadId !== 'string' || typeof reportType !== 'string') {\n        return res.status(400).json({\n            error: 'Missing or invalid projectId, threadId, or reportType'\n        });\n    }\n    try {\n        // ---------------------------------------------\n        // Step 1: Fetch Project Data\n        // ---------------------------------------------\n        const projectRef = adminDb.doc(`projects/${projectId}`);\n        const projectSnap = await projectRef.get();\n        if (!projectSnap.exists) {\n            return res.status(404).json({\n                error: 'Project not found'\n            });\n        }\n        const projectData = projectSnap.data();\n        const userId = projectData.ownerId || null;\n        // ---------------------------------------------\n        // Step 2: Fetch and Parse Thread Messages\n        // ---------------------------------------------\n        const threadRef = adminDb.doc(`threads/${threadId}`);\n        const threadSnap = await threadRef.get();\n        if (!threadSnap.exists) {\n            return res.status(404).json({\n                error: 'Thread not found'\n            });\n        }\n        const threadData = threadSnap.data();\n        const messages = threadData.messages || [];\n        // Convert messages into { role, content } format\n        const allMessages = messages.map((m)=>({\n                role: m.sender === 'ai' ? 'assistant' : 'user',\n                content: m.content\n            }));\n        // Create a readable conversation text\n        const conversationText = allMessages.map((m)=>`${m.role === 'assistant' ? 'AI:' : 'User:'} ${m.content}`).join('\\n\\n');\n        // ---------------------------------------------\n        // Step 3: Define Prompts Based on Report Type\n        // ---------------------------------------------\n        let prompt = '';\n        let systemContent = '';\n        switch(reportType){\n            case 'summary':\n                systemContent = 'You are a professional technical report writer specializing in hydrogen engineering.';\n                prompt = `\nWrite a **comprehensive summary report** for the following hydrogen project and its associated messages.\n\n**Project Details**: ${JSON.stringify(projectData, null, 2)}  \n**Thread Conversation**:  \n${conversationText}\n\nThe summary must include:\n1. Main topics discussed in the conversation.\n2. Key technical findings or standards mentioned.\n3. Important conclusions and actionable next steps.\n4. A professional tone with structured sections.\n`;\n                break;\n            case 'communication':\n                systemContent = 'You are a professional communicator skilled at writing informal summaries for email sharing.';\n                prompt = `\nWrite an **informal communication summary** of the project thread, highlighting:\n1. Main research findings or discussion points.\n2. Big questions or potential safety concerns.\n3. Relevant standards or codes.\n4. Recommended next steps.\n\n**Project Details**: ${JSON.stringify(projectData, null, 2)}  \n**Thread Conversation**:  \n${conversationText}\n\nKeep it professional but conversational, suitable for internal email communication.\n`;\n                break;\n            case 'custom':\n                if (typeof customPrompt !== 'string' || !customPrompt.trim()) {\n                    return res.status(400).json({\n                        error: 'Custom prompt is required for custom reports.'\n                    });\n                }\n                systemContent = 'You are a versatile technical assistant skilled at generating customized reports.';\n                prompt = `\nUsing the provided project details and conversation history, create a report tailored to the following custom request:\n\"${customPrompt}\"\n\n**Project Details**: ${JSON.stringify(projectData, null, 2)}  \n**Thread Conversation**:  \n${conversationText}\n\nEnsure the report is professional, detailed, and tailored to the custom request.\n`;\n                break;\n            default:\n                return res.status(400).json({\n                    error: 'Invalid reportType. Use summary, communication, or custom.'\n                });\n        }\n        // ---------------------------------------------\n        // Step 4: Generate Report with OpenAI\n        // ---------------------------------------------\n        const reportResponse = await openai.chat.completions.create({\n            model: 'gpt-4o-mini',\n            messages: [\n                {\n                    role: 'system',\n                    content: systemContent\n                },\n                {\n                    role: 'user',\n                    content: prompt\n                }\n            ],\n            temperature: 0.2,\n            max_tokens: 6000,\n            frequency_penalty: 0.4,\n            presence_penalty: 0.2\n        });\n        const reportContent = reportResponse.choices[0]?.message?.content || 'No report content generated.';\n        // ---------------------------------------------\n        // Step 5: Save Report to Firestore\n        // ---------------------------------------------\n        const reportRef = adminDb.collection('reports').doc();\n        await reportRef.set({\n            projectId,\n            userId,\n            title: `Report - ${projectData.projectName || 'Project'} (${reportType})`,\n            content: reportContent,\n            type: reportType,\n            createdAt: new Date()\n        });\n        // ---------------------------------------------\n        // Step 6: Return Report Content\n        // ---------------------------------------------\n        return res.status(200).json({\n            message: `${reportType.charAt(0).toUpperCase() + reportType.slice(1)} report generated successfully.`,\n            content: reportContent\n        });\n    } catch (error) {\n        console.error('Error generating report:', error.message);\n        return res.status(500).json({\n            error: 'An internal error occurred while generating the report.'\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/reports/generate.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Freports%2Fgenerate&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Freports%2Fgenerate.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();