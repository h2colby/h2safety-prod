"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/reports/multistep-generate";
exports.ids = ["pages/api/reports/multistep-generate"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "firebase-admin/app":
/*!*************************************!*\
  !*** external "firebase-admin/app" ***!
  \*************************************/
/***/ ((module) => {

module.exports = import("firebase-admin/app");;

/***/ }),

/***/ "firebase-admin/firestore":
/*!*******************************************!*\
  !*** external "firebase-admin/firestore" ***!
  \*******************************************/
/***/ ((module) => {

module.exports = import("firebase-admin/firestore");;

/***/ }),

/***/ "openai":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("openai");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Freports%2Fmultistep-generate&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Freports%2Fmultistep-generate.ts&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Freports%2Fmultistep-generate&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Freports%2Fmultistep-generate.ts&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_reports_multistep_generate_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/reports/multistep-generate.ts */ \"(api)/./pages/api/reports/multistep-generate.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_reports_multistep_generate_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_reports_multistep_generate_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_reports_multistep_generate_ts__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_reports_multistep_generate_ts__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/reports/multistep-generate\",\n        pathname: \"/api/reports/multistep-generate\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_reports_multistep_generate_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnJlcG9ydHMlMkZtdWx0aXN0ZXAtZ2VuZXJhdGUmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRnJlcG9ydHMlMkZtdWx0aXN0ZXAtZ2VuZXJhdGUudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ0U7QUFDMUQ7QUFDc0U7QUFDdEU7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHFFQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxxRUFBUTtBQUNwQztBQUNPLHdCQUF3Qix5R0FBbUI7QUFDbEQ7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9yZXBvcnRzL211bHRpc3RlcC1nZW5lcmF0ZS50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCAnZGVmYXVsdCcpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgJ2NvbmZpZycpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvcmVwb3J0cy9tdWx0aXN0ZXAtZ2VuZXJhdGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9yZXBvcnRzL211bHRpc3RlcC1nZW5lcmF0ZVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJydcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Freports%2Fmultistep-generate&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Freports%2Fmultistep-generate.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/reports/multistep-generate.ts":
/*!*************************************************!*\
  !*** ./pages/api/reports/multistep-generate.ts ***!
  \*************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase-admin/app */ \"firebase-admin/app\");\n/* harmony import */ var firebase_admin_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase-admin/firestore */ \"firebase-admin/firestore\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! openai */ \"openai\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__, firebase_admin_firestore__WEBPACK_IMPORTED_MODULE_1__, openai__WEBPACK_IMPORTED_MODULE_2__]);\n([firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__, firebase_admin_firestore__WEBPACK_IMPORTED_MODULE_1__, openai__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// pages/api/reports/multistep-generate.ts\n\n\n\n// Validate environment variables\nif (!process.env.FIREBASE_SERVICE_ACCOUNT_KEY_BASE64) {\n    throw new Error('FIREBASE_SERVICE_ACCOUNT_KEY_BASE64 is not set');\n}\nif (!process.env.OPENAI_API_KEY) {\n    throw new Error('OPENAI_API_KEY is not set');\n}\n// Decode and parse the base64-encoded Firebase service account JSON\nconst base64 = process.env.FIREBASE_SERVICE_ACCOUNT_KEY_BASE64;\nconst jsonString = Buffer.from(base64, 'base64').toString('utf-8');\nconst serviceAccount = JSON.parse(jsonString);\n// Initialize Firebase Admin SDK if not already initialized\nif (!(0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__.getApps)().length) {\n    (0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)({\n        credential: (0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__.cert)(serviceAccount)\n    });\n}\nconst adminDb = (0,firebase_admin_firestore__WEBPACK_IMPORTED_MODULE_1__.getFirestore)();\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_2__.OpenAI({\n    apiKey: process.env.OPENAI_API_KEY\n});\nasync function handler(req, res) {\n    const { projectId, threadId } = req.body;\n    // Validate request body\n    if (typeof projectId !== 'string' || typeof threadId !== 'string') {\n        return res.status(400).json({\n            error: 'Missing or invalid projectId/threadId'\n        });\n    }\n    try {\n        // Fetch project data\n        const projectRef = adminDb.doc(`projects/${projectId}`);\n        const projectSnap = await projectRef.get();\n        if (!projectSnap.exists) {\n            return res.status(404).json({\n                error: 'Project not found'\n            });\n        }\n        const projectData = projectSnap.data();\n        const userId = projectData.ownerId || null;\n        // Fetch thread data\n        const threadRef = adminDb.doc(`threads/${threadId}`);\n        const threadSnap = await threadRef.get();\n        if (!threadSnap.exists) {\n            return res.status(404).json({\n                error: 'Thread not found'\n            });\n        }\n        const threadData = threadSnap.data();\n        const messages = threadData.messages || [];\n        // Convert messages to OpenAI-compatible conversation format\n        const allMessages = messages.map((m)=>({\n                role: m.sender === 'ai' ? 'assistant' : 'user',\n                content: m.content\n            }));\n        const conversationText = allMessages.map((m)=>`${m.role === 'assistant' ? 'AI:' : 'User:'} ${m.content}`).join('\\n\\n');\n        // ---------------------------------------------\n        // Step 1: Determine Relevant Sections\n        // ---------------------------------------------\n        const sectionPrompt = `\nBased on the following project details and conversation, identify the most relevant sections to include in a detailed engineering report. For each section, provide a short description of its purpose and what content it should include. Exclude irrelevant sections.\n\n**General Categories**:\n1. Engineering Codes and Standards\n2. Safety and Risk Assessment\n3. Environmental Compliance and Permitting\n4. Technical Process Analysis\n5. Project Management Recommendations\n6. References and Citations (all codes, standards, and regulations mentioned)\n7. Other Relevant Topics (if applicable)\n\n**Inputs**:\n- Project Details: ${JSON.stringify(projectData, null, 2)}\n- Thread Conversation:\n${conversationText}\n\n**Output Format**:\nProvide a structured list of relevant sections with descriptions.\n    `;\n        const sectionResponse = await openai.chat.completions.create({\n            model: 'gpt-4o-mini',\n            messages: [\n                {\n                    role: 'system',\n                    content: 'You are a professional technical writer specializing in hydrogen engineering and safety.'\n                },\n                {\n                    role: 'user',\n                    content: sectionPrompt\n                }\n            ],\n            temperature: 0.3,\n            top_p: 0.85,\n            frequency_penalty: 0.2,\n            presence_penalty: 0.2,\n            max_tokens: 2000\n        });\n        const relevantSections = sectionResponse.choices[0]?.message?.content || '';\n        console.log('Relevant Sections:', relevantSections);\n        // ---------------------------------------------\n        // Step 2: Draft a Detailed Report\n        // ---------------------------------------------\n        const draftReportPrompt = `\nYou are an expert technical report writer. Using the relevant sections identified below, draft a detailed, multipage report. Each section must be comprehensive, include all key information from the conversation and project details, and maintain a formal tone.\n\n**Relevant Sections**:\n${relevantSections}\n\n**Project Details**:  \n${JSON.stringify(projectData, null, 2)}\n\n**Thread Conversation**:  \n${conversationText}\n\n### Report Requirements:\n- Include all relevant sections identified.\n- Provide in-depth analysis, citations, and actionable recommendations.\n- Use structured formatting: sections, headers, bullet points, and tables where applicable.\n- Focus on thoroughness and detail. Ensure no insights from the conversation are omitted.\n\nGenerate the detailed report.\n    `;\n        const draftResponse = await openai.chat.completions.create({\n            model: 'gpt-4o-mini',\n            messages: [\n                {\n                    role: 'system',\n                    content: 'You are a professional technical writer specializing in hydrogen engineering reports.'\n                },\n                {\n                    role: 'user',\n                    content: draftReportPrompt\n                }\n            ],\n            temperature: 0.2,\n            max_tokens: 6000\n        });\n        const draftReport = draftResponse.choices[0]?.message?.content || '';\n        console.log('Draft Report:', draftReport);\n        // ---------------------------------------------\n        // Step 3: Extract References\n        // ---------------------------------------------\n        const referencesPrompt = `\nFrom the following draft report, extract and compile a comprehensive list of all mentioned codes, standards, rules, regulations, and other referenced bodies of work. Each item should include its full name and, if possible, a brief description of its relevance to the project.\n\n**Draft Report**:\n${draftReport}\n\nProvide the extracted references in a structured list format.\n    `;\n        const referencesResponse = await openai.chat.completions.create({\n            model: 'gpt-4o-mini',\n            messages: [\n                {\n                    role: 'system',\n                    content: 'You are a technical documentation specialist.'\n                },\n                {\n                    role: 'user',\n                    content: referencesPrompt\n                }\n            ],\n            temperature: 0.2,\n            max_tokens: 2000\n        });\n        const referencesSection = referencesResponse.choices[0]?.message?.content || '';\n        console.log('References Section:', referencesSection);\n        // ---------------------------------------------\n        // Step 4: Refine the Entire Report\n        // ---------------------------------------------\n        const refinePrompt = `\nYou are an expert editor. Refine the draft report below to ensure it is polished, thorough, and professional. Expand any underdeveloped sections, and integrate the references section as a formal part of the report.\n\n**Draft Report**:\n${draftReport}\n\n**References Section**:\n${referencesSection}\n\nRefine and enhance the report, ensuring all insights and references are included.\n    `;\n        const refineResponse = await openai.chat.completions.create({\n            model: 'gpt-4o-mini',\n            messages: [\n                {\n                    role: 'system',\n                    content: 'You are a professional editor.'\n                },\n                {\n                    role: 'user',\n                    content: refinePrompt\n                }\n            ],\n            temperature: 0.2,\n            max_tokens: 6000\n        });\n        const finalReportContent = refineResponse.choices[0]?.message?.content || '';\n        // Save the final report to Firestore\n        const reportRef = adminDb.collection('reports').doc();\n        await reportRef.set({\n            projectId,\n            userId,\n            title: `Engineering Report - ${projectData?.projectName || 'Project'}`,\n            content: finalReportContent,\n            type: 'project',\n            createdAt: new Date()\n        });\n        return res.status(200).json({\n            message: 'Report generated',\n            content: finalReportContent\n        });\n    } catch (error) {\n        console.error('Error generating report:', error);\n        return res.status(500).json({\n            error: error.message\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/reports/multistep-generate.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Freports%2Fmultistep-generate&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Freports%2Fmultistep-generate.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();